//*************************************************************************/
// All rights reserved by Danny Petschke (C) 2016, 2017
//
// Author: Danny Petschke
// Date: 24.01.2017
//
//*************************************************************************/

//Make your defines here:
//Note: Your file-name must always contain ABSOLUT-Pathes (directory + "/" + fileName)
var __name_of_settingsfile_ = "settingsName";
var __name_of_project_ = "yourProjectName";
var __name_of_logFile_ = "yourLogFileName";
var __name_of_dataStream_ = "yourDataStreamFileName";

//Define the number of data to be reached:
var __countsOfDataToBeReached__ = 1000000; //1Mio. Counts

//Define the CFD-Start and Stop-Levels and the CFD-Increment:
var __CFDLevelStart = 10; //%
var __CFDLevelStop = 90; //%

var __incrementOfCFD = 10; //%


restartAcquisition();

if ( !loadSettingsFile(__name_of_settingsfile_) ) 
{
	//In general an error will be thrown but without exiting the script!
	//Therefore, your have to decide for yourself how to manage this occurrance!
	print("Error on Loading Settings-File!");

	return;
}

for ( var CFDLevel = __CFDLevelStart ; CFDLevel <= __CFDLevelStop ; CFDLevel += __incrementOfCFD )
{
	//change the CFD-Levels:
	changeCFDLevelA(CFDLevel);
	changeCFDLevelB(CFDLevel);

	stopLoadingFromDataStreamFile();
	
	if ( !loadDataStreamFile(__name_of_dataStream_) )
	{
		//In general an error will be thrown but without exiting the script!
		//Therefore, your have to decide for yourself how to manage this occurrance!
		print("Error on Loading Data-Stream-File!");

		return;
	}	

	//reset all Spectra before starting Data-Acquisition:
	resetAllSpectra();

	//acquire Data as long your Counts are reached or the Data-Stream is finished:
	while ( getCountsOfMergedSpectrum() < __countsOfDataToBeReached__ && isRunningFromDataStream() ) {}

	//I recommend to stop the Data-Acqusition to be sure that all Data are saved at the same time:
	stopAcquisition();
		
	if ( !saveDataOfMergedSpectrum(__name_of_project_ + "_"+ CFDLevel+ "Percentage" + "_merged.dat") )
	{
		//In general an error will be thrown but without exiting the script!
		//Therefore, your have to decide for yourself how to manage this occurrance!
		print("Error on saving Merged spectrum-file!");

		return;
	}

        if ( !saveDataOfCoincidenceSpectrum(__name_of_project_ + "_"+ CFDLevel+ "Percentage" + "promt.dat") )
	{
		//In general an error will be thrown but without exiting the script!
		//Therefore, your have to decide for yourself how to manage this occurrance!
                print("Error on saving Promt spectrum-file!");

		return;
	}

	if ( !saveDataOfABSpectrum(__name_of_project_ + "_"+ CFDLevel+ "Percentage" + "_AB.dat") )
	{
		//In general an error will be thrown but without exiting the script!
		//Therefore, your have to decide for yourself how to manage this occurrance!
		print("Error on saving A-to-B spectrum-file!");

		return;
	}

	if ( !saveDataOfBASpectrum(__name_of_project_ + "_"+ CFDLevel+ "Percentage" + "_BA.dat") )
	{
		//In general an error will be thrown but without exiting the script!
		//Therefore, your have to decide for yourself how to manage this occurrance!
		print("Error on saving B-to-A spectrum-file!");

		return;
	}
		

	if ( !saveSettingsFile(__name_of_project_ + "_"+ CFDLevel+ "Percentage") )
	{
		//In general an error will be thrown but without exiting the script!
		//Therefore, your have to decide for yourself how to manage this occurrance!
		print("Error on saving new Settings-file!");

		return;
	}
		
	restartAcquisition();
}

if ( !saveCompleteLogFile(__name_of_logFile_ + ".log") )
{
                  //In general an error will be thrown but without exiting the script!
                  //Therefore, your have to decide for yourself how to manage this occurrance!
                  print("Error on saving the Log-file!"); 

                  return;
}

